<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Retirement">

	<resultMap type="RetirementDTO" id="resultMapRtDTO">
		<id property="employeeCode" column="EMPLOYEE_CODE"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="employeeName" column="EMPLOYEE_NAME"/>
		<result property="leaveDate" column="LEAVE_DATE"/>
		<result property="year" column="YEAR"/>
		<result property="month" column="MONTH"/>
		<result property="day" column="DAY"/>
		<result property="allYear" column="ALL_YEAR"/>
		<result property="allMonth" column="ALL_MONTH"/>
		<result property="allDay" column="ALL_DAY"/>
		<result property="threeBeforeMonth" column="THREE_BEFORE_MONTH"/>
		<result property="lastThree" column="LAST_THREE"/>
		<result property="extDay" column="EXT_DAY"/>
		<result property="sumSalary" column="SUM_SALARY"/>
		<result property="sumMeals" column="SUM_MEALS"/>
		<result property="sumDrivingSubsidies" column="SUM_DRIVING_SUBSIDIES"/>
		<result property="sumChildcareAllowance" column="SUM_CHILDCARE_ALLOWANCE"/>
		<result property="sumNightpay" column="SUM_NIGHTPAY"/>
		<result property="sumMonthlypay" column="SUM_MONTHLYPAY"/>
		<result property="sumPositionpay" column="SUM_POSITIONPAY"/>
		<result property="sumAllSalary" column="SUM_ALL_SALARY"/>
		<result property="avgBonus" column="AVG_BONUS"/>
		<result property="sumBonus" column="SUM_BONUS"/>
		<result property="ttAll" column="TT_ALL"/>
		<result property="ttAllYear" column="TT_ALL_YEAR"/>
		<result property="ttAllMonth" column="TT_ALL_MONTH"/>
		<result property="ttAllAllYear" column="TT_ALL_ALL_YEAR"/>
		<result property="ttBMonth" column="TT_B_MONTH"/>
		<result property="ttBAllYear" column="TT_B_ALL_YEAR"/>
		<result property="ttBAllMonth" column="TT_B_ALL_MONTH"/>
		<result property="ttBAllAllYear" column="TT_B_ALL_ALL_YEAR"/>
		<result property="ttAYear" column="TT_A_YEAR"/>
		<collection property="retirementDTO2"  javaType="java.util.List" resultMap="resultMapRtDTO2"/>
	</resultMap>
	<resultMap type="RetirementDTO2" id="resultMapRtDTO2">
		<id property="attributeDate" column="ATTRIBUTE_DATE"/>
		<result property="thisMonthFirstday" column="THIS_MONTH_FIRSTDAY"/>
		<result property="thisMonthLastday" column="THIS_MONTH_LASTDAY"/>
		<result property="salary" column="SALARY"/>
		<result property="bonus" column="BONUS"/>
		<result property="meals" column="MEALS"/>
		<result property="drivingSubsidies" column="DRIVING_SUBSIDIES"/>
		<result property="childcareAllowance" column="CHILDCARE_ALLOWANCE"/>
		<result property="nightpay" column="NIGHTPAY"/>
		<result property="monthlypay" column="MONTHLYPAY"/>
		<result property="positionpay" column="POSITIONPAY"/>
	</resultMap>

	<select id="selectRetireEmp" resultType="Employee" parameterType="java.lang.String">
		SELECT EMPLOYEE_CODE, EMPLOYEE_NAME, EMPLOYEE_NUM
		FROM EMPLOYEE
		WHERE COM_CODE = #{comCode}
			AND LEAVE_DATE IS NOT NULL
	</select>
	
	<select id="selectRetireInfo" parameterType="java.lang.String" resultMap="resultMapRtDTO">
	<![CDATA[
		SELECT E.EMPLOYEE_CODE
		     , TO_CHAR(E.ENROLL_DATE, 'YYYY-MM-DD') "ENROLL_DATE"
		     , E.EMPLOYEE_NAME
		     , TO_CHAR(E.LEAVE_DATE, 'YYYY-MM-DD') "LEAVE_DATE"
		     , TRUNC(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12) "YEAR"
		     , TRUNC(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)
		       - TRUNC(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12)*12) "MONTH"
		     , TRUNC((MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)
		       - TRUNC(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)))*30.5) "DAY"
		     , TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -2),'YYYY-MM-DD') "THREE_BEFORE_MONTH"
		     , TO_DATE(TO_CHAR(E.LEAVE_DATE, 'YYYYMMDD')) - TO_DATE(E.ENROLL_DATE) "ALL_DAY"
		     , CEIL(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)) "ALL_MONTH"
		     , CEIL(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12) "ALL_YEAR"
		     , TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3)) "LAST_THREE"
		     , EXTRACT(DAY FROM E.LEAVE_DATE) "EXT_DAY"
		     , SU.SUM_SALARY
		     , SU.SUM_MEALS
		     , SU.SUM_DRIVING_SUBSIDIES
		     , SU.SUM_CHILDCARE_ALLOWANCE
		     , SU.SUM_NIGHTPAY
		     , SU.SUM_MONTHLYPAY
		     , SU.SUM_POSITIONPAY
		     , SU.SUM_ALL_SALARY
		     , AB.AVG_BONUS
		     , AB.SUM_BONUS
		     , Y.TT_ALL
		     , Y.TT_ALL_YEAR
		     , Y.TT_ALL_MONTH
		     , Y.TT_ALL_ALL_YEAR
		     , Y.TT_B_MONTH
		     , Y.TT_B_ALL_YEAR
		     , Y.TT_B_ALL_MONTH
		     , Y.TT_B_ALL_ALL_YEAR
		     , Y.TT_A_YEAR
		     , IH.ATTRIBUTE_DATE
		     , IH.THIS_MONTH_FIRSTDAY
		     , IH.THIS_MONTH_LASTDAY
		     , IH.SALARY
		     , IH.BONUS
		     , IH.MEALS
		     , IH.DRIVING_SUBSIDIES
		     , IH.CHILDCARE_ALLOWANCE
		     , IH.NIGHTPAY
		     , IH.MONTHLYPAY
		     , IH.POSITIONPAY
		FROM EMPLOYEE E
		JOIN (SELECT MAX(EMPLOYEE_CODE) "EMPLOYEE_CODE", SUM(SALARY) "SUM_SALARY", SUM(MEALS) "SUM_MEALS", SUM(DRIVING_SUBSIDIES) "SUM_DRIVING_SUBSIDIES", SUM(CHILDCARE_ALLOWANCE) "SUM_CHILDCARE_ALLOWANCE", SUM(NIGHTPAY) "SUM_NIGHTPAY", SUM(MONTHLYPAY) "SUM_MONTHLYPAY", SUM(POSITIONPAY) "SUM_POSITIONPAY", SUM(SALARY+MEALS+DRIVING_SUBSIDIES+CHILDCARE_ALLOWANCE+NIGHTPAY+MONTHLYPAY+POSITIONPAY) "SUM_ALL_SALARY"
		      FROM(SELECT EH.ATTRIBUTE_DATE
		                , E.EMPLOYEE_CODE
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.SALARY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.SALARY
		                  END AS "SALARY"
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.MEALS/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.MEALS
		                  END AS "MEALS"
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.DRIVING_SUBSIDIES/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.DRIVING_SUBSIDIES
		                  END AS "DRIVING_SUBSIDIES"
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.CHILDCARE_ALLOWANCE/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.CHILDCARE_ALLOWANCE
		                  END AS "CHILDCARE_ALLOWANCE"
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.NIGHTPAY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.NIGHTPAY
		                  END AS "NIGHTPAY"
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.MONTHLYPAY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.MONTHLYPAY
		                  END AS "MONTHLYPAY"
		                , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                           THEN TRUNC(EH.POSITIONPAY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                       ELSE EH.POSITIONPAY
		                  END AS "POSITIONPAY"
		           FROM EARN_INCOME_HISTORY EH
		           JOIN EMPLOYEE E ON(E.EMPLOYEE_CODE = EH.EMPLOYEE_CODE)
		           WHERE ATTRIBUTE_DATE >= TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3), 'YYYYMM')
		                 AND E.EMPLOYEE_CODE = #{empCode})) SU ON(SU.EMPLOYEE_CODE = E.EMPLOYEE_CODE)
		JOIN (SELECT EH.ATTRIBUTE_DATE
		           , EH.EMPLOYEE_CODE
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYY-MM-DD')
		                  ELSE TO_CHAR(TRUNC(TO_DATE(EH.ATTRIBUTE_DATE,'YYYYMM'),'MM'),'YYYY-MM-DD')
		             END AS "THIS_MONTH_FIRSTDAY"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(E.LEAVE_DATE,'YYYYMM')
		                      THEN TO_CHAR(E.LEAVE_DATE, 'YYYY-MM-DD')
		                  ELSE TO_CHAR(LAST_DAY(TO_DATE(EH.ATTRIBUTE_DATE,'YYYYMM')),'YYYY-MM-DD')
		             END AS "THIS_MONTH_LASTDAY"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.SALARY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.SALARY
		             END AS "SALARY"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.BONUS/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.BONUS
		             END AS "BONUS"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.MEALS/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.MEALS
		             END AS "MEALS"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.DRIVING_SUBSIDIES/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.DRIVING_SUBSIDIES
		             END AS "DRIVING_SUBSIDIES"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.CHILDCARE_ALLOWANCE/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.CHILDCARE_ALLOWANCE
		             END AS "CHILDCARE_ALLOWANCE"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.NIGHTPAY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.NIGHTPAY
		             END AS "NIGHTPAY"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.MONTHLYPAY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.MONTHLYPAY
		             END AS "MONTHLYPAY"
		           , CASE WHEN TO_CHAR(EH.ATTRIBUTE_DATE) = TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3),'YYYYMM')
		                      THEN TRUNC(EH.POSITIONPAY/TO_CHAR(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)),'DD')*(TO_DATE(LAST_DAY(ADD_MONTHS(E.LEAVE_DATE, -3)))- TO_DATE(ADD_MONTHS(E.LEAVE_DATE, -3))))
		                  ELSE EH.POSITIONPAY
		             END AS "POSITIONPAY"
		      FROM EARN_INCOME_HISTORY EH
		      JOIN EMPLOYEE E ON(E.EMPLOYEE_CODE = EH.EMPLOYEE_CODE)
		      WHERE ATTRIBUTE_DATE >= TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -3), 'YYYYMM')
		            AND E.EMPLOYEE_CODE = #{empCode}) IH ON(IH.EMPLOYEE_CODE = E.EMPLOYEE_CODE)
		JOIN (SELECT TRUNC(SUM(BONUS)*3/12) "AVG_BONUS", MAX(EMPLOYEE_CODE) "EMPLOYEE_CODE", SUM(BONUS) "SUM_BONUS"
		      FROM (SELECT REAL_DAY, NVL(ATTRIBUTE_DATE,REAL_DAY) "ATTRIBUTE_DATE", NVL(BONUS,0) "BONUS", EMPLOYEE_CODE
		            FROM (SELECT ATTRIBUTE_DATE, BONUS, E.EMPLOYEE_CODE
		                  FROM EARN_INCOME_HISTORY EH
		                  JOIN EMPLOYEE E ON(E.EMPLOYEE_CODE = EH.EMPLOYEE_CODE)
		                  WHERE ATTRIBUTE_DATE >= TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -12), 'YYYYMM')
		                        AND E.EMPLOYEE_CODE = #{empCode}) A
		            FULL JOIN (SELECT TO_CHAR(ADD_MONTHS((SELECT LEAVE_DATE FROM EMPLOYEE WHERE EMPLOYEE_CODE = #{empCode}), - (LEVEL-1)),'YYYYMM') "REAL_DAY"
		                       FROM DUAL
		                       CONNECT BY LEVEL <= 12) D ON(A.ATTRIBUTE_DATE = D.REAL_DAY))) AB ON(AB.EMPLOYEE_CODE = E.EMPLOYEE_CODE)
		JOIN (SELECT CEIL(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)) "TT_ALL"
		           , TRUNC(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12) "TT_ALL_YEAR"
		           , CEIL(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)
		             - TRUNC(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12)*12) "TT_ALL_MONTH"
		           , CEIL(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12) "TT_ALL_ALL_YEAR"
		           , GREATEST(CEIL(MONTHS_BETWEEN(TO_DATE('20121231', 'YYYYMMDD'), E.ENROLL_DATE)), 0) "TT_B_MONTH"
		           , GREATEST(TRUNC(MONTHS_BETWEEN(TO_DATE('20121231', 'YYYYMMDD'), E.ENROLL_DATE)/12),0) "TT_B_ALL_YEAR"
		           , GREATEST(CEIL(MONTHS_BETWEEN(TO_DATE('20121231', 'YYYYMMDD'), E.ENROLL_DATE)
		             - TRUNC(MONTHS_BETWEEN(TO_DATE('20121231', 'YYYYMMDD'), E.ENROLL_DATE)/12)*12),0) "TT_B_ALL_MONTH"
		           , GREATEST(CEIL(MONTHS_BETWEEN(TO_DATE('20121231', 'YYYYMMDD'), E.ENROLL_DATE)/12),0) "TT_B_ALL_ALL_YEAR"
		           , CEIL(MONTHS_BETWEEN(E.LEAVE_DATE, E.ENROLL_DATE)/12)-CEIL(MONTHS_BETWEEN(TO_DATE('20121231', 'YYYYMMDD'), E.ENROLL_DATE)/12) "TT_A_YEAR"
		           , EMPLOYEE_CODE
		      FROM EMPLOYEE E
		      WHERE EMPLOYEE_CODE = #{empCode}) Y ON(Y.EMPLOYEE_CODE = E.EMPLOYEE_CODE)
		WHERE E.EMPLOYEE_CODE = #{empCode}
		ORDER BY ATTRIBUTE_DATE
			]]>
			</select>
			
			<select id="selectRetireBonus" parameterType="java.lang.String" resultMap="resultMapRtDTO2">
			<![CDATA[
				SELECT NVL(ATTRIBUTE_DATE,REAL_DAY) "ATTRIBUTE_DATE", NVL(BONUS,0) "BONUS"
				FROM (SELECT ATTRIBUTE_DATE, BONUS, E.EMPLOYEE_CODE
				      FROM EARN_INCOME_HISTORY EH
				      JOIN EMPLOYEE E ON(E.EMPLOYEE_CODE = EH.EMPLOYEE_CODE)
				      WHERE ATTRIBUTE_DATE >= TO_CHAR(ADD_MONTHS(E.LEAVE_DATE, -12), 'YYYYMM')
				            AND E.EMPLOYEE_CODE = #{empCode}) A
				FULL JOIN (SELECT TO_CHAR(ADD_MONTHS((SELECT LEAVE_DATE FROM EMPLOYEE WHERE EMPLOYEE_CODE = #{empCode}), - (LEVEL-1)),'YYYYMM') "REAL_DAY"
				          FROM DUAL
				          CONNECT BY LEVEL <= 12) D ON(A.ATTRIBUTE_DATE = D.REAL_DAY)
				ORDER BY REAL_DAY
	]]>
	</select>

</mapper>